from pylab import *
import pandas as pd
import seaborn as sns


def generate_data(n1, n2, n3, x1, y1, x2, y2, x3, y3, sigma, J):
    global X # X数据集
    X = np.zeros((n1 + n2 + n3, J+3))
    X = np.matrix(X)
    for i in range(0, n1):
        X[i, 0] = 1
        X[i, 1] = np.random.normal(x1, sigma, 1)
        X[i, 2] = np.random.normal(y1, sigma, 1)
    for i in range(n1, n1 + n2):
        X[i, 0] = 2
        X[i, 1] = np.random.normal(x2, sigma, 1)
        X[i, 2] = np.random.normal(y2, sigma, 1)
    for i in range(n1 + n2, n1 + n2 + n3):
        X[i, 0] = 3
        X[i, 1] = np.random.normal(x3, sigma, 1)
        X[i, 2] = np.random.normal(y3, sigma, 1)

    parameter = np.zeros((J, 3))
    parameter = np.matrix(parameter)
    for j in range(0, J):
        parameter[j, 0] = np.random.choice((1, -1)) * np.random.normal(3, 0.2, 1)
        parameter[j, 1] = np.random.choice((1, -1)) * np.random.normal(3, 0.2, 1)
        parameter[j, 2] = np.random.normal(-3, 0.2, 1)

    for i in range(0, n1 + n2 + n3):
        for j in range(0, J):
            x = np.array((X[i, 1], X[i, 2])).reshape(2,1)
            a = np.array((parameter[j, 0], parameter[j, 1])).reshape(2,1)
            b = parameter[j, 2]
            f = (np.exp(-np.dot(a.T, x) - b) + 1) ** -1
            X[i, j+3] = np.random.binomial(2, f[0, 0], 1)

    np.savez(r'F:\ECS亚群分析\random_sample.npz', X=X, parameter=parameter)

generate_data(200, 200, 200, 0.2, 0.5, 0.5, 0.7, 0.7, 0.2, 0.05, 300)

df = pd.DataFrame(X)
df.rename(columns={1: 'x', 2: 'y', 0: '分群'}, inplace=True)

plt.rcParams['axes.unicode_minus'] = False
sns.set(font='SimHei')
palette = ['tab:red', 'tab:green', 'tab:blue']
fig = sns.scatterplot(x='x', y='y', hue='分群', s=12, data=df, palette=palette)
scatter_fig = fig.get_figure()
scatter_fig.savefig('F:\ECS亚群分析\Fig真实位置', dpi=400)

plt.show()